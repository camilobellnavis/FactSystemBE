// <auto-generated />
using System;
using FactSystem.Infraestructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FactSystem.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240605034913_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FactSystem.Domain.Entities.CabFactura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_factura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("DniCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dni_cliente");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("impuesto");

                    b.Property<int>("NumFactura")
                        .HasColumnType("int")
                        .HasColumnName("num_factura")
                        .HasAnnotation("SqlServer:Identity", "10001, 1");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total");

                    b.HasKey("IdFactura");

                    b.ToTable("cab_factura", (string)null);
                });

            modelBuilder.Entity("FactSystem.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<byte>("Activo")
                        .HasColumnType("tinyint")
                        .HasColumnName("activo");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("direccion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCliente");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("FactSystem.Domain.Entities.DetFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabFactura")
                        .HasColumnType("int")
                        .HasColumnName("cab_factura");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("CodigoProducto")
                        .HasColumnType("int")
                        .HasColumnName("codigo_producto");

                    b.HasKey("Id");

                    b.HasIndex("CabFactura");

                    b.ToTable("det_factura", (string)null);
                });

            modelBuilder.Entity("FactSystem.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<byte>("Activo")
                        .HasColumnType("tinyint")
                        .HasColumnName("activo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("Inventario")
                        .HasColumnType("int")
                        .HasColumnName("inventario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal")
                        .HasColumnName("precio");

                    b.HasKey("IdProducto");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("FactSystem.Domain.Entities.Usuario", b =>
                {
                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre_usuario");

                    b.Property<byte>("Bloqueado")
                        .HasColumnType("tinyint")
                        .HasColumnName("bloqueado");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contraseña");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("int")
                        .HasColumnName("intentos_fallidos");

                    b.HasKey("NombreUsuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("FactSystem.Domain.Entities.DetFactura", b =>
                {
                    b.HasOne("FactSystem.Domain.Entities.CabFactura", "CabFacturaNavigation")
                        .WithMany("DetFacturas")
                        .HasForeignKey("CabFactura")
                        .IsRequired()
                        .HasConstraintName("FK_DetFactura_CabFactura");

                    b.Navigation("CabFacturaNavigation");
                });

            modelBuilder.Entity("FactSystem.Domain.Entities.CabFactura", b =>
                {
                    b.Navigation("DetFacturas");
                });
#pragma warning restore 612, 618
        }
    }
}
